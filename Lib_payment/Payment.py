import requests
from aiohttp.web_request import Request
from aiohttp import web
import json
import hashlib
import re

from datetime import date, datetime

from Database.User_db import Database

db = Database()



# WALLET


def check_wallet_token(token): # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–æ–∂–µ–º –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å GET –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True, –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ False
    headers = {
        'Wpay-Store-Api-Key': f'{token}', 
        'Content-Type': 'application/json',
        'Accept': 'application/json'
    }

    try:
        response = requests.get('https://pay.wallet.tg/wpay/store-api/v1/reconciliation/order-amount', headers=headers)
        response.json()
        return True
    except:
        return False



def create_wallet_invoice(token, amount, description, user_id, externalId):
    headers = {
     'Wpay-Store-Api-Key': f'{token}',
     'Content-Type': 'application/json',
     'Accept': 'application/json',
    }

    payload = {
      'amount': {
        'currencyCode': 'RUB',  # –≤—ã—Å—Ç–∞–≤–ª—è–µ–º —Å—á–µ—Ç –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö –°–®–ê
        'amount': f'{amount}',
      },
      'description': f'{description}', # –£–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É
      'externalId': f'{externalId}',  # ID —Å—á–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –≤ –≤–∞—à–µ–º –±–æ—Ç–µ
      'timeoutSeconds': 1800,  # –≤—Ä–µ–º—è –¥–µ–π—Å—Ç–≤–∏—è —Å—á–µ—Ç–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
      'customerTelegramUserId': f'{user_id}',  # ID –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram –ø–æ–∫—É–ø–∞—Ç–µ–ª—è
    }

    response = requests.post(
      "https://pay.wallet.tg/wpay/store-api/v1/order",
      json=payload, headers=headers
    )

    data = response.json()

    try:
        return data
    except:
        return []





# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è 
def deleteMessage(token, chat_id, message_id):
    method = 'deleteMessage'
    token = token
    url = f"https://api.telegram.org/bot{token}/{method}"
    data = {"chat_id": chat_id, "message_id": message_id}
    requests.post(url,data=data)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è 
def sendMessage(token, chat_id, text, sale_id):
    try:
      method = 'sendMessage'
      token = token
      url = f"https://api.telegram.org/bot{token}/{method}"
      keyboard = json.dumps({"inline_keyboard": [[{"text": "–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä", "callback_data": f"usersaleid_{sale_id}"}]]})
      data = {"chat_id": chat_id,  "text": text, "parse_mode": 'HTML', "reply_markup": keyboard}
      requests.post(url,data=data)
    except:
        print('–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã!')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏ –∞–¥–º–∏–Ω—É 
def sendMessageAdmin(token, chat_id, text):
    try:
      method = 'sendMessage'
      token = token
      url = f"https://api.telegram.org/bot{token}/{method}"
      data = {"chat_id": chat_id,  "text": text, "parse_mode": 'HTML'}
      requests.post(url,data=data)
    except:
        print('–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã!')



# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–∞ –æ—Ç –ø–ª–∞—Ç–∂–µ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã Wallet
async def check_payment_processing_wallet(request: Request):

    data = await request.json()

  
    if data[0]['type'] == 'ORDER_PAID': # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–ª–∞—Ç–µ–∂ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ
        try:
          data_process = db.check_payment_processing(data[0]['payload']['id']) # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π
          
          deleteMessage(token=f'{data_process[0][0]}', chat_id=data_process[0][4], message_id=data_process[0][12])
          
          
          caption_user = f'''
{db.get_after_payment_caption(project_id=data_process[0][3])[0][0]}

<i>–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä</i>
  '''

          now = datetime.now() 
          time = now.strftime("%H:%M:%S")

          product_data = db.get_sale_product_data(data_process[0][8])

          # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø—Ä–æ–¥–∞–∂—É
          db.add_new_sale(
              project_id=data_process[0][3],
              sale_date=date.today(),
              sale_time=time,
              user_id=data_process[0][4],
              payment_method=data_process[0][7],
              product_id=data_process[0][8],
              product_name=f'{product_data[0][8]}',
              product_type=f'{product_data[0][2]}',
              product_content=data_process[0][10] if product_data[0][2] != 'delivery' else '',
              quantity=data_process[0][11],
              product_price=data_process[0][9]
          )
          db.update_sales_product(product_id=data_process[0][8]) # –î–æ–±–∞–≤–ª—è–µ–º 1 –ø—Ä–æ–¥–∞–∂—É –∫ —Ç–æ–≤–∞—Ä—É
          db.delete_process(process_id=db.get_last_process_id(user_id=data_process[0][4], product_id=data_process[0][8])) # –£–¥–∞–ª—è–µ–º –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –∏–∑ –ë–î
          sale_id = db.get_last_sale_user(user_id=data_process[0][4], product_id=data_process[0][8])[0][0] # –ü–æ–ª—É—á–∞–µ–º sale_id –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–∫—É–ø–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –∫–æ–ª–ª–±—ç–∫
          delivery_data = db.delivery_method_data(method_id=data_process[0][10][0])


          if product_data[0][2] == 'delivery': # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
            db.add_new_delivery_order(
               sale_id=sale_id,
               user_id=data_process[0][4],
               project_id=product_data[0][1],
               product_name=product_data[0][8],
               product_price=product_data[0][6],
               product_quantity=data_process[0][11],
               delivery_method=delivery_data[0][2],
               delivery_price=delivery_data[0][4]
            )

          sendMessage(token=f'{data_process[0][0]}', chat_id=data_process[0][4], text=caption_user, sale_id=sale_id) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ —é–∑–µ—Ä—É


          
          user_data = db.get_user_data(user_id=data_process[0][4], project_id=data_process[0][3]) # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ

          caption_admin = f'''
<b>üí∞ –ù–û–í–ê–Ø –ü–†–û–î–ê–ñ–ê!</b>

<b>–¢–æ–≤–∞—Ä:</b> {product_data[0][8]} 
<b>–ü—Ä–∏–±—ã–ª—å:</b> {data_process[0][9]} üá∑üá∫ RUB

<b>–î–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</b>
<b>üîπ ID –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</b> <code>{data_process[0][4]}</code>
<b>üîπ Username:</b> {'@' + str(user_data[0][4]) if user_data[0][4] != 'None' else '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}
<b>üîπ Fullname –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</b> <code>{user_data[0][3]}</code>
<b>üîπ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {user_data[0][1]} {user_data[0][2]}
<b>üîπ –ö–æ–ª-–≤–æ –ø–æ–∫—É–ø–æ–∫:</b> {user_data[0][5]}
<b>üîπ –°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫:</b> {user_data[0][6]} üá∑üá∫ RUB
<b>üîπ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b> WalletPay

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –Ω–æ–≤–æ–π –ø—Ä–æ–¥–∞–∂–µ–π! üéâ
'''

          sendMessageAdmin(token=f'{data_process[0][0]}', chat_id=db.get_admin_id(data_process[0][3]), text=caption_admin) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–¥–∞–∂–µ –∞–¥–º–∏–Ω—É

          return web.Response(status=200)
        except:
          return web.Response(status=200)
    else:
        return web.Response(status=200)
  





#CRYPTOBOT

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞

def check_cryptobot_token(token):
    headers = {
        'Crypto-Pay-API-Token': f'{token}', 
        'content_type': 'application/json',
        'Accept': 'application/json'
    }

    response = requests.post('https://pay.crypt.bot/api/getMe', headers=headers)

    data = response.json()

    if response.status_code == 200: # –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –≤–∞–ª–∏–¥–Ω—ã–π, —Ç–æ –≤–µ—Ä–Ω–µ—Ç True, –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ False
        return True
    else:
        return False
    


def create_cryptobot_invoice(token, amount):
    headers = {
        'Crypto-Pay-API-Token': f'{token}', 
        'content_type': 'application/json',
        'Accept': 'application/json'
    }

    params = {
        'currency_type': 'fiat',
        'fiat': 'RUB',
        'accepted_assets': 'USDT, TON, BTC, ETH, LTC, BNB, TRX',
        'amount': {amount},
        'expires_in': 1800
    }

    response = requests.get(url='https://pay.crypt.bot/api/createInvoice', params=params, headers=headers)

    data = response.json()

    try:
        return data
    except:
        return []






# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–∞ –æ—Ç –ø–ª–∞—Ç–∂–µ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
async def check_payment_processing_cryptobot(request: Request):

    data = await request.json()

  
    if data['payload']['status'] == 'paid': # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–ª–∞—Ç–µ–∂ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ
        try:
          data_process = db.check_payment_processing(data['payload']['invoice_id']) # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π
          
          deleteMessage(token=f'{data_process[0][0]}', chat_id=data_process[0][4], message_id=data_process[0][12])
          
          
          caption_user = f'''
{db.get_after_payment_caption(project_id=data_process[0][3])[0][0]}

<i>–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä</i>
  '''

          now = datetime.now() 
          time = now.strftime("%H:%M:%S")

          product_data = db.get_sale_product_data(data_process[0][8])

          # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø—Ä–æ–¥–∞–∂—É
          db.add_new_sale(
              project_id=data_process[0][3],
              sale_date=date.today(),
              sale_time=time,
              user_id=data_process[0][4],
              payment_method=data_process[0][7],
              product_id=data_process[0][8],
              product_name=f'{product_data[0][8]}',
              product_type=f'{product_data[0][2]}',
              product_content=data_process[0][10] if product_data[0][2] != 'delivery' else '',
              quantity=data_process[0][11],
              product_price=data_process[0][9]
          )
             
          db.update_sales_product(product_id=data_process[0][8]) # –î–æ–±–∞–≤–ª—è–µ–º 1 –ø—Ä–æ–¥–∞–∂—É –∫ —Ç–æ–≤–∞—Ä—É
          db.delete_process(process_id=db.get_last_process_id(user_id=data_process[0][4], product_id=data_process[0][8])) # –£–¥–∞–ª—è–µ–º –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –∏–∑ –ë–î
          sale_id = db.get_last_sale_user(user_id=data_process[0][4], product_id=data_process[0][8])[0][0] # –ü–æ–ª—É—á–∞–µ–º sale_id –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–∫—É–ø–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –∫–æ–ª–ª–±—ç–∫
          delivery_data = db.delivery_method_data(method_id=data_process[0][10][0])


          if product_data[0][2] == 'delivery': # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
            db.add_new_delivery_order(
               sale_id=sale_id,
               user_id=data_process[0][4],
               project_id=product_data[0][1],
               product_name=product_data[0][8],
               product_price=product_data[0][6],
               product_quantity=data_process[0][11],
               delivery_method=delivery_data[0][2],
               delivery_price=delivery_data[0][4]
            )

          sendMessage(token=f'{data_process[0][0]}', chat_id=data_process[0][4], text=caption_user, sale_id=sale_id) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ —é–∑–µ—Ä—É


          
          user_data = db.get_user_data(user_id=data_process[0][4], project_id=data_process[0][3]) # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ

          caption_admin = f'''
<b>üí∞ –ù–û–í–ê–Ø –ü–†–û–î–ê–ñ–ê!</b>

<b>–¢–æ–≤–∞—Ä:</b> {product_data[0][8]} 
<b>–ü—Ä–∏–±—ã–ª—å:</b> {data_process[0][9]} üá∑üá∫ RUB

<b>–î–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</b>
<b>üîπ ID –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</b> <code>{data_process[0][4]}</code>
<b>üîπ Username:</b> {'@' + str(user_data[0][4]) if user_data[0][4] != 'None' else '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}
<b>üîπ Fullname –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</b> <code>{user_data[0][3]}</code>
<b>üîπ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {user_data[0][1]} {user_data[0][2]}
<b>üîπ –ö–æ–ª-–≤–æ –ø–æ–∫—É–ø–æ–∫:</b> {user_data[0][5]}
<b>üîπ –°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫:</b> {user_data[0][6]} üá∑üá∫ RUB
<b>üîπ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b> CryptoBot

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –Ω–æ–≤–æ–π –ø—Ä–æ–¥–∞–∂–µ–π! üéâ
'''

          sendMessageAdmin(token=f'{data_process[0][0]}', chat_id=db.get_admin_id(data_process[0][3]), text=caption_admin) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–¥–∞–∂–µ –∞–¥–º–∏–Ω—É

          return web.Response(status=200)
        except(Exception) as error:
          print(error)
          return web.Response(status=200)
    else:
        return web.Response(status=200)






#YOOMONEY


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è 
def sendPush(token, chat_id, text):
    try:
      method = 'sendMessage'
      token = token
      url = f"https://api.telegram.org/bot{token}/{method}"
      data = {"chat_id": chat_id,  "text": text, "parse_mode": 'HTML'}
      requests.post(url,data=data)
    except:
        print('–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—É—à–∞!')





def check_operation(post, secret):
    
    sha1 = ''

    sha1 += post['notification_type'] + '&'
    sha1 += post['operation_id'] + '&'
    sha1 += post['amount'] + '&'
    sha1 += post['currency'] + '&'
    sha1 += post['datetime'] + '&'
    sha1 += post['sender'] + '&'
    sha1 += post['codepro'] + '&'
    sha1 += str(secret) + '&'
    sha1 += post['label']

    sha1 = hashlib.sha1(str(sha1).encode('utf-8'))
    hex = sha1.hexdigest()

    if hex == post['sha1_hash']:
       return True
    else:
       return False

    


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ–±—Ö—É–∫–∞ –æ—Ç –ø–ª–∞—Ç–∂–µ–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã Yoomoney
async def check_payment_processing_yoomoney(request: Request):
  data = await request.post()

  text = str(request)
  text_split = text.split('<Request POST /yoomoney/')

  project_id = int((text_split[1])[:-2])
  bot_data = db.get_bot_data(project_id=project_id)


  text1 = '‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–ª–∞—Ç–µ–∂–∞—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!'
  text2 = '''
<b>‚ö†Ô∏è –£ –º–µ–Ω—è –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç –ÆMoney!</b>

–ü—Ä–æ–≤–µ—Ä—å, –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –ª–∏ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ —É —Ç–µ–±—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ÆMoney, –∞ —Ç–∞–∫–∂–µ —É–±–µ–¥–∏—Å—å, —á—Ç–æ —Å—Ç–æ–∏—Ç –≥–∞–ª–æ—á–∫–∞ –≤–æ–∑–ª–µ "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å HTTP-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è".
'''
  text3 = 'üö´ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —Å–µ–∫—Ä–µ—Ç–Ω–æ–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∑–≤–æ–ª–∏—Ç –º–Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ÆMoney'



  try:
    secret = db.get_yoomoney_method(project_id=project_id)

    if check_operation(data, secret=secret[0][6]):
        if data['label'] == '':
          sendPush(token=bot_data[0][6], chat_id=bot_data[0][1], text=text1)
        else:
          try:
            data_process = db.check_payment_processing(data['label']) # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –ø–ª–∞—Ç–µ–∂–µ–π


            if "{:.2f}".format(data_process[0][9]) == data['withdraw_amount']:
              
              deleteMessage(token=f'{data_process[0][0]}', chat_id=data_process[0][4], message_id=data_process[0][12])
              
              
              caption_user = f'''
{db.get_after_payment_caption(project_id=data_process[0][3])[0][0]}

<i>–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä</i>
  '''

              now = datetime.now() 
              time = now.strftime("%H:%M:%S")

              product_data = db.get_sale_product_data(data_process[0][8])

              # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø—Ä–æ–¥–∞–∂—É
              db.add_new_sale(
                  project_id=data_process[0][3],
                  sale_date=date.today(),
                  sale_time=time,
                  user_id=data_process[0][4],
                  payment_method=data_process[0][7],
                  product_id=data_process[0][8],
                  product_name=f'{product_data[0][8]}',
                  product_type=f'{product_data[0][2]}',
                  product_content=data_process[0][10] if product_data[0][2] != 'delivery' else '',
                  quantity=data_process[0][11],
                  product_price=data_process[0][9]
              )
                
              db.update_sales_product(product_id=data_process[0][8]) # –î–æ–±–∞–≤–ª—è–µ–º 1 –ø—Ä–æ–¥–∞–∂—É –∫ —Ç–æ–≤–∞—Ä—É
              db.delete_process(process_id=db.get_last_process_id(user_id=data_process[0][4], product_id=data_process[0][8])) # –£–¥–∞–ª—è–µ–º –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –∏–∑ –ë–î
              sale_id = db.get_last_sale_user(user_id=data_process[0][4], product_id=data_process[0][8])[0][0] # –ü–æ–ª—É—á–∞–µ–º sale_id –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–∫—É–ø–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –∫–æ–ª–ª–±—ç–∫
              delivery_data = db.delivery_method_data(method_id=data_process[0][10][0])


              if product_data[0][2] == 'delivery': # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
                db.add_new_delivery_order(
                  sale_id=sale_id,
                  user_id=data_process[0][4],
                  project_id=product_data[0][1],
                  product_name=product_data[0][8],
                  product_price=product_data[0][6],
                  product_quantity=data_process[0][11],
                  delivery_method=delivery_data[0][2],
                  delivery_price=delivery_data[0][4]
                )

              sendMessage(token=f'{data_process[0][0]}', chat_id=data_process[0][4], text=caption_user, sale_id=sale_id) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ —é–∑–µ—Ä—É


              
              user_data = db.get_user_data(user_id=data_process[0][4], project_id=data_process[0][3]) # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ

              caption_admin = f'''
<b>üí∞ –ù–û–í–ê–Ø –ü–†–û–î–ê–ñ–ê!</b>

<b>–¢–æ–≤–∞—Ä:</b> {product_data[0][8]} 
<b>–ü—Ä–∏–±—ã–ª—å:</b> {data_process[0][9]} üá∑üá∫ RUB

<b>–î–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</b>
<b>üîπ ID –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</b> <code>{data_process[0][4]}</code>
<b>üîπ Username:</b> {'@' + str(user_data[0][4]) if user_data[0][4] != 'None' else '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}
<b>üîπ Fullname –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:</b> <code>{user_data[0][3]}</code>
<b>üîπ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {user_data[0][1]} {user_data[0][2]}
<b>üîπ –ö–æ–ª-–≤–æ –ø–æ–∫—É–ø–æ–∫:</b> {user_data[0][5]}
<b>üîπ –°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫:</b> {user_data[0][6]} üá∑üá∫ RUB
<b>üîπ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</b> YooMoney

–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –Ω–æ–≤–æ–π –ø—Ä–æ–¥–∞–∂–µ–π! üéâ
'''

              sendMessageAdmin(token=f'{data_process[0][0]}', chat_id=db.get_admin_id(data_process[0][3]), text=caption_admin) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–¥–∞–∂–µ –∞–¥–º–∏–Ω—É

              return web.Response(status=200)
            else:
              print('–ë—ã–ª–∞ –ø–æ–ø—ã—Ç–∫–∞ –≤—ã—Å—Ç–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ–ª—å–Ω—ã–π —Å—á–µ—Ç')
              return web.Response(status=200)
          except(Exception) as error:
            print(error)
            return web.Response(status=200)
    else:
      sendPush(token=bot_data[0][6], chat_id=bot_data[0][1], text=text2)
  except:
    sendPush(token=bot_data[0][6], chat_id=bot_data[0][1], text=text3)


  
  return web.Response(status=200)


