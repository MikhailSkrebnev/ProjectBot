from aiogram import types, F, Router
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

from datetime import datetime

from Database.Admin_db import Database

from Keyboards.admin_keyboards.statistics_keyboards import(
    statistics_kb,
    back_to_statistics
)


router = Router()
db = Database()


@router.callback_query(F.data == 'statistics')
async def call_statistics(call: types.CallbackQuery):
    bot_username = await call.bot.get_me()
    project_id = db.get_project_id(bot_username=bot_username.username)
    current_date = datetime.now().strftime('%Y-%m-%d')

    total_statistics = db.get_total_statistics(project_id=project_id)
    statistics_over_time = db.get_statistics_over_time(project_id=project_id, date=current_date)

    caption = f'''
<b>üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê</b>

<b>üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {total_statistics[0][0]}
<b>üõí –ü–æ–∫—É–ø–∞—Ç–µ–ª–µ–π:</b> {total_statistics[0][1]}
<b>üí∞ –í—Å–µ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ:</b> {total_statistics[0][2]}‚ÇΩ

<b>üìÖ –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞</b>
<b>üîπ –ù–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b> {statistics_over_time[0][0]}
<b>üîπ –ù–æ–≤—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π:</b> {statistics_over_time[0][1]}
<b>üîπ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ:</b> {statistics_over_time[0][2] if statistics_over_time[0][2] != None else '0'}‚ÇΩ
'''

    await call.message.edit_text(
        text=caption,
        reply_markup=statistics_kb().as_markup()
    )



@router.callback_query(F.data == 'products_statistics')
async def call_products_statistics(call: types.CallbackQuery):
    bot_username = await call.bot.get_me()
    project_id = db.get_project_id(bot_username=bot_username.username)

    caption = f'''
<b>üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –¢–û–í–ê–†–ê–ú</b>

<b>–¢–û–ü 10 –¢–û–í–ê–†–û–í</b>
'''

    for item in db.get_products_statistics(project_id=project_id):
        caption += f'\n\n<b>–¢–æ–≤–∞—Ä:</b> {item[1]}\n<b>–ö–æ–ª-–≤–æ –ø—Ä–æ–¥–∞–∂:</b> {item[3]}\n<b>–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂:</b> {item[2]}‚ÇΩ'
    
    await call.message.edit_text(
        text=caption,
        reply_markup=back_to_statistics().as_markup()
    )




@router.callback_query(F.data == 'statistics_on_customers')
async def call_statistics_on_customers(call: types.CallbackQuery):
    bot_username = await call.bot.get_me()
    project_id = db.get_project_id(bot_username=bot_username.username)

    caption = f'''
<b>üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ü–û–ö–£–ü–ê–¢–ï–õ–Ø–ú</b>

<b>–¢–û–ü 10 –ü–û–ö–£–ü–ê–¢–ï–õ–ï–ô</b>
'''
    
    for user in db.get_statistics_on_customers(project_id=project_id):
        caption += f"\n\n<b>–ü–æ–∫—É–ø–∞—Ç–µ–ª—å:</b> <code>{user[0]}</code> \n* ID: <code>{user[1]}</code> \n* USERNAME: <code>{'@' + user[2] if user[2] != 'None' else '–Ω–µ —É–∫–∞–∑–∞–Ω'}</code>\n<b>–ö–æ–ª-–≤–æ –ø–æ–∫—É–ø–æ–∫:</b> {user[3]}\n<b>–°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫:</b> {user[4]}‚ÇΩ"

    await call.message.edit_text(
        text=caption,
        reply_markup=back_to_statistics().as_markup()
    )


